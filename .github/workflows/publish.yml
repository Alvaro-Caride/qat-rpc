name: Publish to OQC Private PyPI

on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'
  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Install Poetry
      uses: snok/install-poetry@v1
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.x"
    - name: Poetry install
      run: poetry install --sync
    - name: Poetry build
      run: poetry build
    - name: Store the distribution packages
      uses: actions/upload-artifact@v3
      with:
        name: python-package-distributions
        path: dist/

  publish-to-oqc-pypi:
    name: Publish to PyPI
    needs:
    - build
    runs-on: ubuntu-latest
    env:
      name: oqcpypi
      url: ${{ format('{0}qat-rpc', secrets.OQC_PYPI_URL) }}  # Replace <package-name> with your PyPI project name
    permissions:
      id-token: write
    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v3
      with:
        name: python-package-distributions
        path: dist/
    - name: Publish distribution ðŸ“¦ to OQC PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: ${{ secrets.OQC_PYPI_URL }}
        user: ${{ secrets.OQC_PYPI_USER }}
        password: ${{ secrets.OQC_PYPI_PASSWORD }}

  github-release:
    name: >-
      Sign the Python distribution
      and upload them to GitHub Release
    needs:
    - publish-to-oqc-pypi
    runs-on: ubuntu-latest
    permissions:
      contents: write  # IMPORTANT: mandatory for making GitHub Releases
      id-token: write  # IMPORTANT: mandatory for sigstore
    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v3
      with:
        name: python-package-distributions
        path: dist/
    - name: Sign the dists with Sigstore
      uses: sigstore/gh-action-sigstore-python@v2.1.1
      with:
        inputs: >-
          ./dist/*.tar.gz
          ./dist/*.whl
    - name: Create GitHub Release
      env:
        GITHUB_TOKEN: ${{ github.token }}
      run: >-
        gh release create
        '${{ github.ref_name }}'
        --repo '${{ github.repository }}'
        --notes ""
    - name: Upload artifact signatures to GitHub Release
      env:
        GITHUB_TOKEN: ${{ github.token }}
      # Upload to GitHub Release using the `gh` CLI.
      # `dist/` contains the built packages, and the
      # sigstore-produced signatures and certificates.
      run: >-
        gh release upload
        '${{ github.ref_name }}' dist/**
        --repo '${{ github.repository }}'
